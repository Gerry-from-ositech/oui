name: test workflow

on:
  repository_dispatch:
    types: [build]


jobs:
  test-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: payload
        env:
          THE_DEVICE_TYPE: ${{ github.event.client_payload.device_type }}
        run: |
          echo ${{ github.event.client_payload.device_type }}
          echo ${{ github.event.client_payload.release_ver }}
          echo "$THE_DEVICE_TYPE"
      - name: Clone the repo
        uses: actions/checkout@v2
        with:
          #repository: Ositech-Communications-Inc/OpenWRT-BSP
          token: ${{ secrets.GITHUB_TOKEN }}

        #run:
        #  git clone --depth 1 git$github:$GITHUB_REPOSITORY
      - name: Run shell commands
        run: |
          pwd
          ls -la
          cd docs
          ls -la
          cat deploy.sh
          #ps aux
          #echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          #echo "${{ github.token }}"
          echo git$github:$GITHUB_REPOSITORY
      - name: Cat out oui/docs/deplay.shell
        run: |
          ls -la
          git --version
      - name: Some logic
        run: |
         echo ${{ github.event.client_payload.device_type }}
         echo ${{ github.event.client_payload.release_ver }}
         if [ ${{ github.event.client_payload.device_type }} = "IVR" ]; then
            echo "We have an IVR build"
         else
            echo "We have an IBU build"
         fi

      #- name: Set release name
      #  run: echo ::set-env name=RELEASE_NAME::$(echo ${GITHUB_REF:11})

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
        #  tag_name: ${{ github.ref }}
        #  release_name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ github.event.client_payload.release_ver }}
          release_name: ${{ github.event.client_payload.release_ver }}
          body_path: rel_notes.md
      #    body: |
      #      Changes in this release :
      #        - First Change
      #        - Second Change
          draft: false
          prerelease: false
      - name: Show target for asset to be loaded
        run: echo ${{ steps.create_release.outputs.upload_url }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
        #  asset_path: ./lede-1701/bin/targets/ramips/mt7621/ivr-v1.0.0.sub2x-wg259.bin
          asset_path: ./bin/targets/ramips/mt7621/ivr-v1.0.0.sub2x-wg259.bin
          asset_name: ivr-v1.0.0.sub2x-wg259.bin
          asset_content_type: application/octet-stream
      #- name: Dump github context
      #  env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #  run: echo "$GITHUB_CONTEXT"
      #- name: Dump Job context
      #  env:
      #     JOB_CONTEXT: ${{ toJson(job) }}
      #  run: echo "$JOB_CONTEXT"
      #- name: Dump Runner context
      #  env:
      #     RUNNER_CONTEXT: ${{ toJson(runner) }}
      #  run: echo "$RUNNER_CONTEXT"
      #- name: Show file contents
      #  run: cat 
